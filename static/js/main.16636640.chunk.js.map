{"version":3,"sources":["components/dumbComponents/logo.png","logo.svg","components/dumbComponents/Divider.js","components/dumbComponents/Header.js","components/formula/QuadraticEquation.js","components/formula/ArithmeticMean.js","components/formula/AreaTriangle.js","components/formula/AreaRectangle.js","components/logic/bg.png","components/logic/Compute.js","components/logic/FilteredList.js","components/formula/Distance2Point.js","components/formula/Slope2Points.js","components/formula/Midpoint2Points.js","components/logic/Search.js","App.js","reportWebVitals.js","index.js","components/logic/math.png"],"names":["Divider","props","DividerBox","styled","div","DividerLine","Wrapper","Header","className","src","require","default","height","width","FormulaDiv","Input","input","QuadraticEquation","useState","valueA","setValueA","valueB","setValueB","valueC","setValueC","firstRoot","setFirstRoot","secondRoot","setSecondRoot","valueX","setValueX","onChange","event","target","value","type","placeholder","onClick","Math","sqrt","console","log","Button","button","MeanWrapper","ArithmeticMean","mean","setMean","arr","setArr","setValue","split","map","Number","reduce","a","b","length","AreaTriangle","base","setBase","setHeight","area","setArea","AreaRectangle","lenght","setLenght","setWidth","bg","Compute","formula","name","description","SecondWrapper","FilteredList","filteredData","key","onF","setFormula","listOfFormula","href","Distance2Points","valueD","setValueD","round","Slope2Points","Midpoint2Points","SearchBar","BigWrapper","Search","Distance2Point","setFilteredData","searchWord","newFilter","filter","toLowerCase","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16636640.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e8b88646.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from \"styled-components\";\r\n// import \"./Divider.css\";\r\n\r\nconst Divider = (props) => {\r\n  const DividerBox = styled.div`\r\n    height: 30px;\r\n    width: 30px;\r\n    background-color: #f0d8a8;\r\n  `;\r\n  const DividerLine = styled.div`\r\n    height: 30px;\r\n    width: 100%;\r\n    border-top: 1px solid #f0d8a8;\r\n    border-bottom: 1px solid #f0d8a8;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  `;\r\n  return (\r\n    <DividerLine>\r\n      <DividerBox></DividerBox>\r\n      <DividerBox></DividerBox>\r\n    </DividerLine>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  /* Rectangle 52 */\r\n\r\n  width: 1440px;\r\n  height: 142px;\r\n  left: 0px;\r\n  top: 30px;\r\n\r\n  background: linear-gradient(\r\n    270.52deg,\r\n    #353232 41.7%,\r\n    #7e7d7c 90.63%,\r\n    #353232 100%\r\n  );\r\n\r\n  & li {\r\n    list-style-type: none;\r\n    color: white;\r\n    margin: 0 28px;\r\n    font-size: 27px;\r\n  }\r\n  & ul {\r\n    display: flex;\r\n  }\r\n`;\r\nconst Header = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"header--logo\">\r\n        <img\r\n          src={require(\"./logo.png\").default}\r\n          height={181.5}\r\n          width={759}\r\n        ></img>\r\n      </div>\r\n      <div className=\"header--list\">\r\n        <ul>\r\n          <li>Formula</li>\r\n          <li>About</li>\r\n          <li>Creator</li>\r\n        </ul>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst FormulaDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  & .Button {\r\n    width: 85px;\r\n    height: 30px;\r\n    margin-top: 30px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    box-shadow: -2px 3px 6px -1px rgba(255, 255, 255, 0.25);\r\n    border-radius: 10px;\r\n  }\r\n  & .Button:hover {\r\n    background-color: #fdfdfd;\r\n  }\r\n  & .Button:active {\r\n    background-color: wheat;\r\n  }\r\n\r\n  align-items: center;\r\n  & p {\r\n    color: white;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  & .formula--wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  & .inline {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .column {\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .answer {\r\n    color: white;\r\n\r\n    font-size: 18px;\r\n  }\r\n  & .answer--box {\r\n    /* Rectangle 64 */\r\n    width: 142px;\r\n    height: 47px;\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & p {\r\n      color: black;\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n  & .marginB {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  ::placeholder {\r\n    color: black;\r\n    font-size: 10px;\r\n    text-align: center;\r\n  }\r\n  width: 70px;\r\n  height: 20px;\r\n  margin-top: 15px;\r\n  margin-left: 10px;\r\n\r\n  & :active {\r\n    outline: none;\r\n    border: solid 2px green;\r\n  }\r\n`;\r\nconst QuadraticEquation = (props) => {\r\n  let valueAParameter = 0;\r\n  let valueBParameter = 0;\r\n  let valueCParameter = 0;\r\n\r\n  const [valueA, setValueA] = useState(\"\");\r\n  const [valueB, setValueB] = useState(\"\");\r\n  const [valueC, setValueC] = useState(\"\");\r\n  const [firstRoot, setFirstRoot] = useState(\"\");\r\n  const [secondRoot, setSecondRoot] = useState(\"\");\r\n  const [valueX, setValueX] = useState(\"??\");\r\n  const VariableA = function (event) {\r\n    setValueA(event.target.value);\r\n    valueAParameter = valueA;\r\n  };\r\n  const VariableC = function (event) {\r\n    setValueC(event.target.value);\r\n    valueCParameter = valueC;\r\n  };\r\n  const VariableB = function (event) {\r\n    setValueB(event.target.value);\r\n    valueBParameter = valueB;\r\n  };\r\n  const CalculateArea = function () {\r\n    setFirstRoot(\r\n      (-valueB + Math.sqrt(valueB * valueB - 4 * valueA * valueC)) /\r\n        (2 * valueA)\r\n    );\r\n    setSecondRoot(\r\n      (-valueB - Math.sqrt(valueB * valueB - 4 * valueA * valueC)) /\r\n        (2 * valueA)\r\n    );\r\n    console.log(firstRoot);\r\n    setValueX(`${firstRoot}, ${secondRoot}`);\r\n  };\r\n  return (\r\n    <FormulaDiv>\r\n      <p>Input Values for a, b and c to find x</p>\r\n      <div className=\"formula--wrapper\">\r\n        <div className=\"inline\">\r\n          <p>a =</p>\r\n\r\n          <Input\r\n            onChange={VariableA}\r\n            type=\"number\"\r\n            placeholder=\"Value of a\"\r\n            value={valueA}\r\n          ></Input>\r\n          <p className=\"marginB\">b =</p>\r\n          <Input\r\n            onChange={VariableB}\r\n            type=\"number\"\r\n            placeholder=\"Value of b\"\r\n            value={valueB}\r\n          ></Input>\r\n        </div>\r\n        <div className=\"inline\">\r\n          <p>c =</p>\r\n          <Input\r\n            onChange={VariableC}\r\n            type=\"number\"\r\n            placeholder=\"Value of c\"\r\n            value={valueC}\r\n          ></Input>\r\n        </div>\r\n      </div>\r\n      <button className=\"Button\" onClick={CalculateArea}>\r\n        Calculate\r\n      </button>\r\n      <div className=\"column\">\r\n        <p className=\"answer\"> possible values of x = </p>\r\n        <div className=\"answer--box\">\r\n          <p> {valueX}</p>\r\n        </div>\r\n      </div>\r\n    </FormulaDiv>\r\n  );\r\n};\r\n\r\nexport default QuadraticEquation;\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\nconst Button = styled.button`\r\n  width: 85px;\r\n  height: 30px;\r\n\r\n  border: 1px solid #000000;\r\n  box-sizing: border-box;\r\n  box-shadow: -2px 3px 6px -1px rgba(255, 255, 255, 0.25);\r\n  border-radius: 10px;\r\n  margin-top: 30px;\r\n\r\n  &:hover {\r\n    background-color: #fdfdfd;\r\n  }\r\n  &:active {\r\n    background-color: wheat;\r\n  }\r\n`;\r\nconst MeanWrapper = styled.div`\r\n  height: 100%;\r\n  color: white;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n\r\n  & p {\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  & input {\r\n    /* Rectangle 65 */\r\n\r\n    width: 209px;\r\n    height: 36px;\r\n\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  & .answer {\r\n    color: white;\r\n\r\n    font-size: 18px;\r\n  }\r\n  & .answer--box {\r\n    /* Rectangle 64 */\r\n    width: 142px;\r\n    height: 47px;\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & p {\r\n      color: black;\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\nconst ArithmeticMean = (props) => {\r\n  const [mean, setMean] = useState(\"\");\r\n  const [arr, setArr] = useState([1, 2]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const meanHandler = function (event) {\r\n    setValue(event.target.value);\r\n    console.log(value);\r\n    setArr(value.split(\",\").map(Number));\r\n    console.log(arr);\r\n  };\r\n  const calculateHandler = function () {\r\n    setMean(arr.reduce((a, b) => a + b) / arr.length);\r\n  };\r\n  return (\r\n    <MeanWrapper>\r\n      <p className=\"header\">\r\n        Input all of the given values seperated by comma (“ , “)\r\n      </p>\r\n      <input\r\n        onChange={meanHandler}\r\n        type=\"text\"\r\n        className=\"input\"\r\n        placeholder=\"Input all the number\"\r\n      ></input>\r\n      <Button onClick={calculateHandler}>Calculate</Button>\r\n      <p className=\"answer\"> Arithmetic Mean = </p>\r\n      <div className=\"answer--box\">\r\n        <p> {mean}</p>\r\n      </div>\r\n    </MeanWrapper>\r\n  );\r\n};\r\n\r\nexport default ArithmeticMean;\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst FormulaDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  & .Button {\r\n    width: 85px;\r\n    height: 30px;\r\n\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    box-shadow: -2px 3px 6px -1px rgba(255, 255, 255, 0.25);\r\n    border-radius: 10px;\r\n    margin-top: 30px;\r\n  }\r\n  & .Button:hover {\r\n    background-color: #fdfdfd;\r\n  }\r\n  & .Button:active {\r\n    background-color: wheat;\r\n  }\r\n\r\n  align-items: center;\r\n  & p {\r\n    color: white;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  & .formula--wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  & .inline {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  & .column {\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .answer {\r\n    color: white;\r\n\r\n    font-size: 18px;\r\n  }\r\n  & .answer--box {\r\n    /* Rectangle 64 */\r\n    width: 142px;\r\n    height: 47px;\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & p {\r\n      color: black;\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  ::placeholder {\r\n    color: black;\r\n    font-size: 10px;\r\n    text-align: center;\r\n  }\r\n  width: 100px;\r\n  height: 20px;\r\n  margin-top: 15px;\r\n  margin-left: 10px;\r\n\r\n  & :active {\r\n    outline: none;\r\n    border: solid 2px green;\r\n  }\r\n`;\r\nconst AreaTriangle = (props) => {\r\n  let baseParameter = 0;\r\n  let heightParameter = 0;\r\n\r\n  const [base, setBase] = useState(\"\");\r\n  const [height, setHeight] = useState(\"\");\r\n  const [area, setArea] = useState(\"??\");\r\n  const VariableA = function (event) {\r\n    setBase(event.target.value);\r\n    baseParameter = base;\r\n  };\r\n  const VariableB = function (event) {\r\n    setHeight(event.target.value);\r\n    heightParameter = height;\r\n  };\r\n  const CalculateArea = function () {\r\n    setArea(height * base);\r\n  };\r\n  return (\r\n    <FormulaDiv>\r\n      <p>\r\n        Input the value of base and height to calculate the area of the triangle\r\n      </p>\r\n      <div className=\"formula--wrapper\">\r\n        <div className=\"inline\">\r\n          <p>Base =</p>\r\n          <Input\r\n            onChange={VariableA}\r\n            type=\"number\"\r\n            placeholder=\"Value of Base\"\r\n            value={base}\r\n          ></Input>\r\n        </div>\r\n        <div className=\"inline\">\r\n          <p>Height =</p>\r\n          <Input\r\n            onChange={VariableB}\r\n            type=\"number\"\r\n            placeholder=\"Value of Height\"\r\n            value={height}\r\n          ></Input>\r\n        </div>\r\n      </div>\r\n      <button className=\"Button\" onClick={CalculateArea}>\r\n        Calculate\r\n      </button>\r\n      <div className=\"column\">\r\n        <p className=\"answer\"> Area of triangle = </p>\r\n        <div className=\"answer--box\">\r\n          <p> {area}</p>\r\n        </div>\r\n      </div>\r\n    </FormulaDiv>\r\n  );\r\n};\r\n\r\nexport default AreaTriangle;\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst FormulaDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  & .Button {\r\n    width: 85px;\r\n    height: 30px;\r\n    margin-top: 30px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    box-shadow: -2px 3px 6px -1px rgba(255, 255, 255, 0.25);\r\n    border-radius: 10px;\r\n  }\r\n  & .Button:hover {\r\n    background-color: #fdfdfd;\r\n  }\r\n  & .Button:active {\r\n    background-color: wheat;\r\n  }\r\n\r\n  align-items: center;\r\n  & p {\r\n    color: white;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  & .formula--wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  & .inline {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  & .column {\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .answer {\r\n    color: white;\r\n\r\n    font-size: 18px;\r\n  }\r\n  & .answer--box {\r\n    /* Rectangle 64 */\r\n    width: 142px;\r\n    height: 47px;\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & p {\r\n      color: black;\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  ::placeholder {\r\n    color: black;\r\n    font-size: 10px;\r\n    text-align: center;\r\n  }\r\n  width: 100px;\r\n  height: 20px;\r\n  margin-top: 15px;\r\n  margin-left: 10px;\r\n\r\n  & :active {\r\n    outline: none;\r\n    border: solid 2px green;\r\n  }\r\n`;\r\nconst AreaRectangle = (props) => {\r\n  let lenghtParameter = 0;\r\n  let widthParameter = 0;\r\n\r\n  const [lenght, setLenght] = useState(\"\");\r\n  const [width, setWidth] = useState(\"\");\r\n  const [area, setArea] = useState(\"??\");\r\n  const VariableA = function (event) {\r\n    setLenght(event.target.value);\r\n    lenghtParameter = lenght;\r\n  };\r\n  const VariableB = function (event) {\r\n    setWidth(event.target.value);\r\n    widthParameter = width;\r\n  };\r\n  const CalculateArea = function () {\r\n    setArea(width * lenght);\r\n  };\r\n  return (\r\n    <FormulaDiv>\r\n      <p>\r\n        Input the value of lenght and width to calculate the area of the\r\n        rectangle\r\n      </p>\r\n      <div className=\"formula--wrapper\">\r\n        <div className=\"inline\">\r\n          <p>Length =</p>\r\n          <Input\r\n            onChange={VariableA}\r\n            type=\"number\"\r\n            placeholder=\"Value of Lenght\"\r\n            value={lenght}\r\n          ></Input>\r\n        </div>\r\n        <div className=\"inline\">\r\n          <p>Width =</p>\r\n          <Input\r\n            onChange={VariableB}\r\n            type=\"number\"\r\n            placeholder=\"Value of Width\"\r\n            value={width}\r\n          ></Input>\r\n        </div>\r\n      </div>\r\n      <button className=\"Button\" onClick={CalculateArea}>\r\n        Calculate\r\n      </button>\r\n      <div className=\"column\">\r\n        <p className=\"answer\"> Area of reactangle = </p>\r\n        <div className=\"answer--box\">\r\n          <p> {area}</p>\r\n        </div>\r\n      </div>\r\n    </FormulaDiv>\r\n  );\r\n};\r\n\r\nexport default AreaRectangle;\r\n","export default __webpack_public_path__ + \"static/media/bg.e373337b.png\";","import styled from \"styled-components\";\r\nimport bg from \"./bg.png\";\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n\r\n  width: 858px;\r\n  height: 548px;\r\n  justify-content: space-between;\r\n  padding: 50px;\r\n  display: flex;\r\n  background: url(${bg});\r\n  border: 1px solid #ffffff;\r\n  box-sizing: border-box;\r\n  box-shadow: -14px 16px 16px rgba(255, 255, 255, 0.1);\r\n  border-radius: 20px;\r\n\r\n  & .wrapper--formula {\r\n    width: 283px;\r\n    height: 425px;\r\n    border-radius: 22px;\r\n    border: solid white 1px;\r\n  }\r\n  & .wrapper--content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 365px;\r\n\r\n    & .wrapper--content--headings {\r\n      color: white;\r\n      font-size: 35px;\r\n    }\r\n    & .wrapper--content--text {\r\n      color: white;\r\n      text-align: justify;\r\n    }\r\n  }\r\n`;\r\nconst Compute = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"wrapper--content\">\r\n        <h1 className=\"wrapper--content--headings\">{props.formula.name}</h1>\r\n        <p className=\"wrapper--content--text\">{props.formula.description}</p>\r\n      </div>\r\n      <div className=\"wrapper--formula\">{props.formula.formula}</div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Compute;\r\n","import styled from \"styled-components\";\r\nimport Search from \"./Search\";\r\n// styles of the Second Wrapper\r\nconst SecondWrapper = styled.div`\r\n  width: 382px;\r\n  height: 548px;\r\n  background-color: #353232;\r\n  border-radius: 20px;\r\n  border: solid 1px white;\r\n  box-shadow: -14px 16px 16px rgba(255, 255, 255, 0.1);\r\n\r\n  & .dataResult {\r\n    width: 382px;\r\n    height: 548px;\r\n\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n    /* background-color: #d7d6d6; */\r\n  }\r\n\r\n  & .dataResult .dataItem {\r\n    width: 342px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  & .dataItem {\r\n    border-bottom: 1px solid #f0d8a8;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  & .dataItem {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-size: 18px;\r\n    padding-left: 20px;\r\n  }\r\n  & .dataItem:hover {\r\n    color: #f0d8a8;\r\n  }\r\n\r\n  & .header {\r\n    color: white;\r\n    text-align: center;\r\n  }\r\n  & .dataItem:focus {\r\n    color: #f0d8a8;\r\n    font-family: \"Open Sans\", sans-serif;\r\n    font-weight: 700;\r\n  }\r\n`;\r\nconst FilteredList = (props) => {\r\n  return (\r\n    <SecondWrapper>\r\n      <h1 className=\"header\">List of Formulas</h1>\r\n      {/* ternary operator that change the display on the filtered list div  */}\r\n      {props.filteredData.length != 0 ? (\r\n        <div className=\"dataResult\">\r\n          {/* returns a map from the filtered data state */}\r\n          {props.filteredData.map((value, key) => {\r\n            return (\r\n              <a\r\n                onF\r\n                onClick={function () {\r\n                  props.setFormula(props.listOfFormula[`${key}`]);\r\n                }}\r\n                className=\"dataItem\"\r\n                href=\"#\"\r\n              >\r\n                <p> {value.name}</p>\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"dataResult\">\r\n          {/* returns a map from the list of formula */}\r\n          {props.listOfFormula.map((value, key) => {\r\n            return (\r\n              <a\r\n                onClick={function () {\r\n                  props.setFormula(props.listOfFormula[`${key}`]);\r\n                }}\r\n                className=\"dataItem\"\r\n                href=\"#\"\r\n              >\r\n                <p> {value.name}</p>\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </SecondWrapper>\r\n  );\r\n};\r\n\r\nexport default FilteredList;\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst FormulaDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  & .Button {\r\n    width: 85px;\r\n    height: 30px;\r\n    margin-top: 30px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    box-shadow: -2px 3px 6px -1px rgba(255, 255, 255, 0.25);\r\n    border-radius: 10px;\r\n  }\r\n  & .Button:hover {\r\n    background-color: #fdfdfd;\r\n  }\r\n  & .Button:active {\r\n    background-color: wheat;\r\n  }\r\n\r\n  align-items: center;\r\n  & p {\r\n    color: white;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  & .formula--wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  & .inline {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .column {\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .answer {\r\n    color: white;\r\n\r\n    font-size: 18px;\r\n  }\r\n  & .answer--box {\r\n    /* Rectangle 64 */\r\n    width: 142px;\r\n    height: 47px;\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & p {\r\n      color: black;\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n  & .marginB {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  ::placeholder {\r\n    color: black;\r\n    font-size: 10px;\r\n    text-align: center;\r\n  }\r\n  width: 70px;\r\n  height: 20px;\r\n  margin-top: 15px;\r\n  margin-left: 10px;\r\n\r\n  & :active {\r\n    outline: none;\r\n    border: solid 2px green;\r\n  }\r\n`;\r\nconst Distance2Points = (props) => {\r\n  let valueAParameter = 0;\r\n  let valueBParameter = 0;\r\n  let valueCParameter = 0;\r\n  let valueDParameter = 0;\r\n\r\n  const [valueA, setValueA] = useState(\"\");\r\n  const [valueB, setValueB] = useState(\"\");\r\n  const [valueC, setValueC] = useState(\"\");\r\n  const [valueD, setValueD] = useState(\"\");\r\n\r\n  const [valueX, setValueX] = useState(\"??\");\r\n  const VariableA = function (event) {\r\n    setValueA(event.target.value);\r\n    valueAParameter = valueA;\r\n  };\r\n  const VariableC = function (event) {\r\n    setValueC(event.target.value);\r\n    valueCParameter = valueC;\r\n  };\r\n  const VariableB = function (event) {\r\n    setValueB(event.target.value);\r\n    valueBParameter = valueB;\r\n  };\r\n  const VariableD = function (event) {\r\n    setValueD(event.target.value);\r\n    valueDParameter = valueD;\r\n  };\r\n  const Calculate = function () {\r\n    setValueX(Math.sqrt((valueA - valueB) ** 2 + (valueC - valueD) ** 2));\r\n  };\r\n  return (\r\n    <FormulaDiv>\r\n      <p>\r\n        Input values X1, X2 , Y1 and Y2 to find the distance between the two\r\n        points\r\n      </p>\r\n      <div className=\"formula--wrapper\">\r\n        <div className=\"inline\">\r\n          <p>X1 =</p>\r\n\r\n          <Input\r\n            onChange={VariableA}\r\n            type=\"number\"\r\n            placeholder=\"Value of X1\"\r\n            value={valueA}\r\n          ></Input>\r\n          <p className=\"marginB\">X2 =</p>\r\n          <Input\r\n            onChange={VariableB}\r\n            type=\"number\"\r\n            placeholder=\"Value of X2\"\r\n            value={valueB}\r\n          ></Input>\r\n        </div>\r\n        <div className=\"inline\">\r\n          <p>Y1 =</p>\r\n          <Input\r\n            onChange={VariableC}\r\n            type=\"number\"\r\n            placeholder=\"Value of Y1\"\r\n            value={valueC}\r\n          ></Input>\r\n          <p className=\"marginB\">Y2 =</p>\r\n          <Input\r\n            onChange={VariableD}\r\n            type=\"number\"\r\n            placeholder=\"Value of Y2\"\r\n            value={valueD}\r\n          ></Input>\r\n        </div>\r\n      </div>\r\n      <button className=\"Button\" onClick={Calculate}>\r\n        Calculate\r\n      </button>\r\n      <div className=\"column\">\r\n        <p className=\"answer\"> Distance = </p>\r\n        <div className=\"answer--box\">\r\n          <p> {Math.round(valueX * 100) / 100}</p>\r\n        </div>\r\n      </div>\r\n    </FormulaDiv>\r\n  );\r\n};\r\n\r\nexport default Distance2Points;\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst FormulaDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  & .Button {\r\n    width: 85px;\r\n    height: 30px;\r\n    margin-top: 30px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    box-shadow: -2px 3px 6px -1px rgba(255, 255, 255, 0.25);\r\n    border-radius: 10px;\r\n  }\r\n  & .Button:hover {\r\n    background-color: #fdfdfd;\r\n  }\r\n  & .Button:active {\r\n    background-color: wheat;\r\n  }\r\n\r\n  align-items: center;\r\n  & p {\r\n    color: white;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  & .formula--wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  & .inline {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .column {\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .answer {\r\n    color: white;\r\n\r\n    font-size: 18px;\r\n  }\r\n  & .answer--box {\r\n    /* Rectangle 64 */\r\n    width: 142px;\r\n    height: 47px;\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & p {\r\n      color: black;\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n  & .marginB {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  ::placeholder {\r\n    color: black;\r\n    font-size: 10px;\r\n    text-align: center;\r\n  }\r\n  width: 70px;\r\n  height: 20px;\r\n  margin-top: 15px;\r\n  margin-left: 10px;\r\n\r\n  & :active {\r\n    outline: none;\r\n    border: solid 2px green;\r\n  }\r\n`;\r\nconst Slope2Points = (props) => {\r\n  let valueAParameter = 0;\r\n  let valueBParameter = 0;\r\n  let valueCParameter = 0;\r\n  let valueDParameter = 0;\r\n\r\n  const [valueA, setValueA] = useState(\"\");\r\n  const [valueB, setValueB] = useState(\"\");\r\n  const [valueC, setValueC] = useState(\"\");\r\n  const [valueD, setValueD] = useState(\"\");\r\n\r\n  const [valueX, setValueX] = useState(\"??\");\r\n  const VariableA = function (event) {\r\n    setValueA(event.target.value);\r\n    valueAParameter = valueA;\r\n  };\r\n  const VariableC = function (event) {\r\n    setValueC(event.target.value);\r\n    valueCParameter = valueC;\r\n  };\r\n  const VariableB = function (event) {\r\n    setValueB(event.target.value);\r\n    valueBParameter = valueB;\r\n  };\r\n  const VariableD = function (event) {\r\n    setValueD(event.target.value);\r\n    valueDParameter = valueD;\r\n  };\r\n  const Calculate = function () {\r\n    setValueX((valueC - valueD) / (valueA - valueB));\r\n  };\r\n  return (\r\n    <FormulaDiv>\r\n      <p>\r\n        Input values X1, X2 , Y1 and Y2 to find the slope between the two points\r\n      </p>\r\n      <div className=\"formula--wrapper\">\r\n        <div className=\"inline\">\r\n          <p>X1 =</p>\r\n\r\n          <Input\r\n            onChange={VariableA}\r\n            type=\"number\"\r\n            placeholder=\"Value of X1\"\r\n            value={valueA}\r\n          ></Input>\r\n          <p className=\"marginB\">X2 =</p>\r\n          <Input\r\n            onChange={VariableB}\r\n            type=\"number\"\r\n            placeholder=\"Value of X2\"\r\n            value={valueB}\r\n          ></Input>\r\n        </div>\r\n        <div className=\"inline\">\r\n          <p>Y1 =</p>\r\n          <Input\r\n            onChange={VariableC}\r\n            type=\"number\"\r\n            placeholder=\"Value of Y1\"\r\n            value={valueC}\r\n          ></Input>\r\n          <p className=\"marginB\">Y2 =</p>\r\n          <Input\r\n            onChange={VariableD}\r\n            type=\"number\"\r\n            placeholder=\"Value of Y2\"\r\n            value={valueD}\r\n          ></Input>\r\n        </div>\r\n      </div>\r\n      <button className=\"Button\" onClick={Calculate}>\r\n        Calculate\r\n      </button>\r\n      <div className=\"column\">\r\n        <p className=\"answer\"> Slope = </p>\r\n        <div className=\"answer--box\">\r\n          <p> {Math.round(valueX * 100) / 100}</p>\r\n        </div>\r\n      </div>\r\n    </FormulaDiv>\r\n  );\r\n};\r\n\r\nexport default Slope2Points;\r\n","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst FormulaDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  & .Button {\r\n    width: 85px;\r\n    height: 30px;\r\n    margin-top: 30px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    box-shadow: -2px 3px 6px -1px rgba(255, 255, 255, 0.25);\r\n    border-radius: 10px;\r\n  }\r\n  & .Button:hover {\r\n    background-color: #fdfdfd;\r\n  }\r\n  & .Button:active {\r\n    background-color: wheat;\r\n  }\r\n\r\n  align-items: center;\r\n  & p {\r\n    color: white;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n\r\n  & .formula--wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  & .inline {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .column {\r\n    display: flex;\r\n\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & .answer {\r\n    color: white;\r\n\r\n    font-size: 18px;\r\n  }\r\n  & .answer--box {\r\n    /* Rectangle 64 */\r\n    width: 142px;\r\n    height: 47px;\r\n    background: #ffffff;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & p {\r\n      color: black;\r\n      text-align: center;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n  & .marginB {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  ::placeholder {\r\n    color: black;\r\n    font-size: 10px;\r\n    text-align: center;\r\n  }\r\n  width: 70px;\r\n  height: 20px;\r\n  margin-top: 15px;\r\n  margin-left: 10px;\r\n\r\n  & :active {\r\n    outline: none;\r\n    border: solid 2px green;\r\n  }\r\n`;\r\nconst Midpoint2Points = (props) => {\r\n  let valueAParameter = 0;\r\n  let valueBParameter = 0;\r\n  let valueCParameter = 0;\r\n  let valueDParameter = 0;\r\n\r\n  const [valueA, setValueA] = useState(\"\");\r\n  const [valueB, setValueB] = useState(\"\");\r\n  const [valueC, setValueC] = useState(\"\");\r\n  const [valueD, setValueD] = useState(\"\");\r\n\r\n  const [valueX, setValueX] = useState(\"??\");\r\n  const VariableA = function (event) {\r\n    setValueA(event.target.value);\r\n    valueAParameter = valueA;\r\n  };\r\n  const VariableC = function (event) {\r\n    setValueC(event.target.value);\r\n    valueCParameter = valueC;\r\n  };\r\n  const VariableB = function (event) {\r\n    setValueB(event.target.value);\r\n    valueBParameter = valueB;\r\n  };\r\n  const VariableD = function (event) {\r\n    setValueD(event.target.value);\r\n    valueDParameter = valueD;\r\n  };\r\n  const Calculate = function () {\r\n    setValueX(`${(valueA + valueB) / 2} , ${(valueC + valueD) / 2}`);\r\n  };\r\n  return (\r\n    <FormulaDiv>\r\n      <p>\r\n        Input values X1, X2 , Y1 and Y2 to find the slope between the two points\r\n      </p>\r\n      <div className=\"formula--wrapper\">\r\n        <div className=\"inline\">\r\n          <p>X1 =</p>\r\n\r\n          <Input\r\n            onChange={VariableA}\r\n            type=\"number\"\r\n            placeholder=\"Value of X1\"\r\n            value={valueA}\r\n          ></Input>\r\n          <p className=\"marginB\">X2 =</p>\r\n          <Input\r\n            onChange={VariableB}\r\n            type=\"number\"\r\n            placeholder=\"Value of X2\"\r\n            value={valueB}\r\n          ></Input>\r\n        </div>\r\n        <div className=\"inline\">\r\n          <p>Y1 =</p>\r\n          <Input\r\n            onChange={VariableC}\r\n            type=\"number\"\r\n            placeholder=\"Value of Y1\"\r\n            value={valueC}\r\n          ></Input>\r\n          <p className=\"marginB\">Y2 =</p>\r\n          <Input\r\n            onChange={VariableD}\r\n            type=\"number\"\r\n            placeholder=\"Value of Y2\"\r\n            value={valueD}\r\n          ></Input>\r\n        </div>\r\n      </div>\r\n      <button className=\"Button\" onClick={Calculate}>\r\n        Calculate\r\n      </button>\r\n      <div className=\"column\">\r\n        <p className=\"answer\"> Midpoint = </p>\r\n        <div className=\"answer--box\">\r\n          <p> {valueX}</p>\r\n        </div>\r\n      </div>\r\n    </FormulaDiv>\r\n  );\r\n};\r\n\r\nexport default Midpoint2Points;\r\n","import React, { useState } from \"react\";\r\nimport QuadraticEquation from \"../formula/QuadraticEquation\";\r\nimport styled from \"styled-components\";\r\nimport ArithmeticMean from \"../formula/ArithmeticMean\";\r\nimport AreaTriangle from \"../formula/AreaTriangle\";\r\nimport AreaRectangle from \"../formula/AreaRectangle\";\r\nimport Compute from \"./Compute\";\r\nimport FilteredList from \"./FilteredList\";\r\nimport Distance2Points from \"../formula/Distance2Point\";\r\nimport Slope2Points from \"../formula/Slope2Points\";\r\nimport Midpoint2Points from \"../formula/Midpoint2Points\";\r\n// Style for the search bar\r\nconst SearchBar = styled.div`\r\n  margin-top: 10px;\r\n  width: 1440px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  align-items: center;\r\n  position: relative;\r\n  flex-direction: row;\r\n  & .search--input {\r\n    background-color: #d7d6d6;\r\n    width: 533px;\r\n    height: 54px;\r\n    font-size: 27px;\r\n    color: #020202;\r\n    border: solid 1px #d7d6d6;\r\n    border-radius: 20px;\r\n  }\r\n\r\n  & ::placeholder {\r\n    color: #020202;\r\n  }\r\n\r\n  & .search--input:focus {\r\n    outline-color: #f0d8a8;\r\n  }\r\n`;\r\n// Big wrapper Styles\r\nconst BigWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  & .WrapperRow {\r\n    margin-top: 50px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n// JSX code for the search, it icludes the filter method and change of display\r\nconst Search = (props) => {\r\n  // Object containing all of the formula as well as their own definition\r\n  const listOfFormula = [\r\n    {\r\n      name: \"Area of Rectangle\",\r\n      description:\r\n        \"The area of a rectangle (A) is the product of its length 'a' and width or breadth 'b'. So, Area of Rectangle = (a × b) square units.\",\r\n      formula: <AreaRectangle></AreaRectangle>,\r\n    },\r\n    {\r\n      name: \"Area of Triangle\",\r\n      description:\r\n        \"To calculate the area of a triangle, multiply the height by the width (this is also known as the 'base') then divide by 2.\",\r\n      formula: <AreaTriangle></AreaTriangle>,\r\n    },\r\n    {\r\n      name: \"Arithmetic Mean\",\r\n      description:\r\n        \"The mean, or average, is calculated by adding up the scores and dividing the total by the number of scores\",\r\n      formula: <ArithmeticMean></ArithmeticMean>,\r\n    },\r\n    {\r\n      name: \"Quadratic Equations\",\r\n      description:\r\n        \"The standard form of a quadratic equation is ax2 + bx + c = 0, where a, b are the coefficients, x is the variable, and c is the constant term. The first condition for an equation to be a quadratic equation is the coefficient of x2 is a non-zero term(a ≠0).\",\r\n      formula: <QuadraticEquation></QuadraticEquation>,\r\n    },\r\n    {\r\n      name: \"Distance of Two Points\",\r\n      description:\r\n        \"Distance between two points P(x1,y1) and Q(x2,y2) is given by: d(P, Q) = √ (x2 − x1)2 + (y2 − y1)2 {Distance formula} 2. Distance of a point P(x, y) from the origin is given by d(0,P) = √ x2 + y2.\",\r\n      formula: <Distance2Points></Distance2Points>,\r\n    },\r\n    {\r\n      name: \"Slope of Two Points\",\r\n      description:\r\n        \"Use the slope formula to find the slope of a line given the coordinates of two points on the line. The slope formula is m=(y2-y1)/(x2-x1), or the change in the y values over the change in the x values. The coordinates of the first point represent x1 and y1. The coordinates of the second points are x2, y2.\",\r\n      formula: <Slope2Points></Slope2Points>,\r\n    },\r\n    {\r\n      name: \"Midpoint of Two Points\",\r\n      description:\r\n        \"The formula for midpoint = (x1 + x2)/2, (y1 + y2)/2. Substituting in the two x coordinates and two y coordinates from the endpoint\",\r\n      formula: <Midpoint2Points></Midpoint2Points>,\r\n    },\r\n  ];\r\n  // state for changing of the formula in the display\r\n  let [formula, setFormula] = useState(listOfFormula[0]);\r\n  // state for the filtering of data that will be display on the search\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  // event for filtering the data base on the user input\r\n  const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    const newFilter = listOfFormula.filter((value) => {\r\n      return value.name.toLowerCase().includes(searchWord.toLowerCase());\r\n    });\r\n    setFilteredData(newFilter);\r\n  };\r\n  // Start of JSX code\r\n  return (\r\n    // Big wrapper is the Main container\r\n    <BigWrapper>\r\n      {/* SearchBar includes the input and image for design purposes */}\r\n      <SearchBar className=\"searchBar\">\r\n        <img src={require(\"./math.png\").default} height={119} width={119}></img>\r\n        <input\r\n          onChange={handleFilter}\r\n          className=\"search--input\"\r\n          type=\"text\"\r\n          placeholder=\"Search..\"\r\n        ></input>\r\n        <img src={require(\"./math.png\").default} height={119} width={119}></img>\r\n      </SearchBar>\r\n      {/* middle section of the page contains the filtered list of formula and the computational div */}\r\n      <div className=\"WrapperRow\">\r\n        {/* div of filtered list of formula */}\r\n        <FilteredList\r\n          filteredData={filteredData}\r\n          listOfFormula={listOfFormula}\r\n          setFormula={setFormula}\r\n        ></FilteredList>\r\n        {/* div for the computational */}\r\n        <Compute formula={formula}></Compute>\r\n      </div>\r\n    </BigWrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Divider from \"../src/components/dumbComponents/Divider\";\nimport Header from \"../src/components/dumbComponents/Header\";\nimport Search from \"../src/components/logic/Search\";\nimport styled from \"styled-components\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Divider></Divider>\n\n      <Header></Header>\n\n      <Divider></Divider>\n\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/math.b467700c.png\";"],"sourceRoot":""}